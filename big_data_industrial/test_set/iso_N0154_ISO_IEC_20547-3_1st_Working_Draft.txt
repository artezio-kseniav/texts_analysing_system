ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   1   2   3   4   5   ISO/IEC 20547-3   ISO/IEC JTC 1/ WG 9 N0154   Date: 2016-28-01   Secretariat: ANSI      6  7   Title Information technology - Big Data Reference Architecture - Part  3: Reference Architecture   8   9   10  11  12  13  14  15   16  17  18  19  20   21  22         1st Working Draft   Warning for WDs and CDs   This document is not an ISO International Standard. It is distributed for review and comment. It is subject to  change without notice and may not be referred to as an International Standard.  Recipients of this draft are invited to submit, with their comments, notification of any relevant patent rights of  which they are aware and to provide supporting documentation.   Editors of ISO/IEC 20547  Editors Draft of Information Technology  Big Data  Reference Architecture   (Updates  after Dec WG9 F2F Meeting in Brasilia)  Editors Version      Ray Walshe (Insight), David Boyd (InCadence Strategic Solutions)     Source:  Title:    Status  Editors      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture      Big Data  Reference Architecture   1  Scope   This  International  Standard  specifies  the  Big  Data  Reference  Architecture  (BDRA).  The  Reference  Architecture includes the Big Data roles, activities, and functional components and their relationships.   The reference architecture specified in this International Standard defines:     A Conceptual model for a Big Data Ecosystem defining roles/sub-roles and their relationships within that   ecosystem.     A  description  of  the  types  of  activities  associated  with  the  roles  and  sub-roles  within  a  Big  Data   ecosystem.     A description of the types of functional components leveraged by the roles and how they interact to create   an operational Big Data architecture.     A description of the types of activities and how they are associated with specific roles and sub-roles in a   Big Data architecture.   The key goal of this RA is to facilitate a shared understanding across multiple products, organizations, and  disciplines about current architectures and future direction.   2  Normative references   The  following  referenced  documents  are  indispensable  for  the  application  of  this  document.  For  dated  references,  only  the  edition  cited  applies.  For  undated  references,  the  latest  edition  of  the  referenced  document (including any amendments) applies:   ISO/IEC 20546:20XX, Information technology  Big Data  Overview and Vocabulary   ISO/IEC 17789:2014, Information technology  Cloud computing  Reference architecture     [Editors note: We might need to ref. to ISO 42010 ISO/IEEE for architecture definitions]   3    Terms and definitions   For the purposes of this International Standard, the following terms and definitions apply.   3.1  Terms defined in this International Standard   3.2  Terms defined elsewhere   3.2.1.  a specified pursuit or set of tasks   activity   1      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   [SOURCE: ISO/IEC 17789:2014]   Big Data   3.2.2.  extensive datasets primarily in the characteristics of volume, variety, velocity, and/or variability that require  a scalable architecture for efficient storage, manipulation, and analysis     [Editors note: updated according to the 20546 1st WD (N0087) and will continue to track]     [SOURCE: ISO/IEC 20546]   3.2.3.  a functional building block needed to engage in an activity (clause 3.2.1), backed by an implementation   functional component   [SOURCE: ISO/IEC 17789:2014]     reference architecture   3.2.4.  a Reference Architecture is an authoritative source of  information about a specific subject area that guides  and constrains the instantiations of multiple architectures and solutions   [SOURCE: DoD, xxxx]   NOTE  comparison and alignment of instantiations of architectures and solutions   Reference architectures generally serve as a foundation for solution architectures and may also be used for   [Editors note: need definitive source and need to reach out authours for ISO 42010 for reference architecture.  To consider adding other definitions to 42010]   3.2.5.  role  a set of activities (clause 3.2.1) that serves a common purpose   [SOURCE: ISO/IEC 17789:2014]   3.2.6.  a subset of the activities (clause 3.2.1) of a given role (clause 3.2.5)   sub-role   [SOURCE: ISO/IEC 17789:2014]   4  Abbreviation   BDRA  Big Data Reference Architecture   2      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   5  Conventions   The diagrams that appear in this International Standard are presented using the following conventions. This  notation is used as described in ISO/IEC   17789:20  14.      Figure 1  Legend to the diagrams used throughout     this International Standard   NOTE   In Figure 1, "Aspect" is to be understood as referring to "Cross-cutting aspect".   6  Big Data reference architecture goals and objectives   [Editors note: need to align with 20547-1 for same goals, objectives, language, etc.]   In  general  terms,  reference  architecture  provides  an  authoritative  source  of  information  about  a  specific  subject area that guides and constrains the instantiations of multiple architectures and solutions. Reference  architectures generally serve as a reference foundation for solution architectures and may also be used for  comparison and alignment purposes.   The  reference  architecture  presented  in  this  International  Standard  provides  an  architectural  framework  for  describing the Big Data components, processes, and systems to establish a common language for the various  stakeholders.   The BDRA serves the following goals:      to provide a common language for the various stakeholders;      to encourage adherence to common standards, specifications, and patterns; and      to provide consistency of implementation of technology to solve similar problem sets.    ISO 2015  All rights reserved   3      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   The reference architecture is intended to facilitate the understanding of the operational intricacies in Big Data.  It does not represent the system architecture of a specific Big Data system; instead it is a tool for describing,  discussing, and developing system-specific architectures using a common framework of reference.   It  provides  a  generic  high-level  conceptual  model  that  is  an  effective  tool  for  discussing  the  requirements,  structures,  and  operations  inherent  to  Big  Data.  The  model  is  not  tied  to  any  specific  vendor  products,  services or reference implementation, nor does it define prescriptive solutions that inhibit innovation.   The BDRA supports the following standardization objectives:         to illustrate and understand the various Big Data components, processes, and systems, in the context of  an overall Big Data conceptual model;     to  provide  a  technical  reference  for  government  departments,  agencies  and  other  consumers  to  understand, discuss, categorize and compare Big Data solutions; and        to facilitate the analysis of candidate standards for interoperability, portability, reusability, and extendibility.   7  Reference architecture concepts   [Editors note: This clause should align with 20547-1 and 42010]   This  International  standard  defines  a  BDRA  that  can  serve  as  a  fundamental  reference  point  for  Big  Data  standardization and which provides an overall framework for the basic concepts and principles of a Big Data  system.   As  well  as  specifying  the  roles  and  Big  Data  activities  view  in  clause  8  and  the  functional  view  including  architectural functional components in clause 9, this International Standard describes in this clause the logical  relationships of the roles and Big Data activities to the functional components.   Standards can be relevant to some of these relationships. Standards associated with a relationship can be  used to (i) specify degrees of information flow  or other types of interoperability; and/or (ii) ensure specified  degrees of quality (e.g., security or service level).   Logical  relationships  defined  in  this  architecture  are  a  significant  part  of  specifying  the  BDRA  and  its  behaviour. The relationship describes matters such as the required information flows between the functional  components in the BDRA.   7.1  Overview      This clause provides an overview of the architectural approaches that are used in this International standard.   7.2  BDRA architectural views   Big Data can be described using a viewpoint approach. Four distinct viewpoints are used in the BDRA  (see Figure 2):     User view;     Functional view;      Implementation view; and     Deployment view.   4      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 2  Transformations between architectural views      Table 1 shows a description of each of these views.   [Editors note: User view from cloud is more business model while Activities view for Big Data is more from  technical approach (drill down to technology components). Big Data is broader than just cloud]   Table 1  BDRA views   BDRA view   Activities    view   Functional view   Implementation view   Deployment view   Description of the BDRA view  The system context, the stakeholders (used in    ISO/IEC/IEEE 42010), the roles, the sub-roles and the Big  Data activities  The functions necessary for the support of Big Data  activities  The functions necessary for the implementation of a Big  Data within service parts and/or infrastructure parts  How the functions of a Big Data are technically  implemented within already existing infrastructure elements  or within new elements to be introduced in this infrastructure   Scope   Within scope   Within scope   Out of scope   Out of scope   NOTE  While  details  of  the  user  view  and  functional  view  are  addressed  within  this  International  Standard,  the  implementation and deployment views are related to technology and vendor-specific Big Data implementations and actual  deployments, and are therefore out of the scope of this International Standard.   7.3  User view of Big Data   The user view addresses the following Big Data concepts:     Big Data activities;     Roles and sub-roles;     Stakeholders Big Data services;     Big Data deployment models;     cross-cutting aspects.   [Editors note: change the diagram from Party to Activity; Aspect needs to be defined]   Figure 3 illustrates the entities that are defined for the user view.    ISO 2015  All rights reserved   5      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 3  Activities    View Entities      7.3.1  Big Data activities   A Big Data activity is defined as a specified pursuit or set of tasks.   Big Data activities need to have a purpose and deliver one or more outcomes.   Activities in a Big Data system are conducted using functional components (see clause 7.3.1).   Big Data activities are identified and described in more detail in clause 8.   7.3.2  Roles and sub-roles   [Editors note: need to align with contribution in Section 8]   A role is a set of Big Data activities that serve a common purpose.   In the BDRA, four roles have been defined:       Big data consumer     Data provider     Big data application provider     Big data framework provider   A sub-role is a subset of the Big Data activities for a given role.   Different sub-roles can share the Big Data activities associated with a given role.   Descriptions of the Big Data roles and sub-roles are provided in clause 8.   7.3.3  Stakeholders   [Editors note: need to clean/align the paragraph below]   A stakeholder is a natural person or legal person, whether or not incorporated, or a group of either. Parties in  a Big Data ecosystem are its stakeholders.   6      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   NOTE  A party can assume more than one role at any  given point in  time and can engage in a specific subset of  activities  of  that  role.  Examples  of  parties  include,  but  are  not  limited  to,  large  corporations,  small  and  medium  sized  enterprises, government departments, academic institutions and private citizens.   7.3.4  Functional components   This  clause  describes  the  Big  Data  architecture  in  terms  of  the  common  set  of  Big  Data  functional  components. A functional component is a functional element of the BDRA which is used to perform an activity  or  some  part  of  an  activity  and  which  has  an  implementation  artefact  in  a  concrete  realization  of  the  architecture, e.g., a software component, a subsystem or an application.   Figure  13  presents  a  high  level  overview  of  the  BDRA  functional  components  organized  by  means  of  the  layering framework.   Figure 16  Functional components of BDRA [TBD]   7.3.5  User layer functional components [TBD]   7.3.6  Access layer functional components [TBD]   7.3.6.1  Access control   7.3.7  Service layer functional components [TBD]   7.3.7.1  Algorithms   7.3.7.2  Visualizations   7.3.7.3  Workflows   7.3.7.4  Transformations   7.3.8  Resource layer functional components [TBD]   7.3.9  Multi-layer functions [TBD]    ISO 2015  All rights reserved      7      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   7.3.9.1   Integration functional components   7.3.9.2  Security and Privacy functional components   7.3.9.2.1 Authentication      7.3.9.2.2 Authorization   7.3.9.3  Business support system functional components   7.3.9.4  Management functional components   7.3.9.4.1 Monitoring   7.3.9.4.2 Package management   7.3.9.4.3 Resource management   7.3.9.4.4 Provisioning and configuration      7.3.10  Big Data services     [TBD]   7.3.11  Big Data deployment models     [TBD]   7.3.12  Cross-cutting (or Fabric) aspects     Cross-cutting  aspects  are  behaviours  or  capabilities  which  need  to  be  coordinated  across  roles  and  implemented consistently in a Big Data ecosystem.     Cross-cutting  aspects  can  be  shared  and  can  impact  multiple  roles,  Big  Data  activities  and  functional  components.   Cross-cutting aspects apply to multiple individual roles or functional components.   An example of a cross-cutting aspect is security.   A description of the cross-cutting aspects is provided in clause 8.6.   7.4  Functional view of Big Data   The functional view is a technology-neutral view of the functions necessary to form a Big Data system. The  functional view describes the distribution of functions necessary for the support of Big Data activities.   The functional architecture also defines the dependencies between functions.   The functional view addresses the following Big Data concepts:      [TBD]   Figure 4 illustrates the concepts of functions, layers and functional components.   8      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 4  Functional layering      The Big Data functional architecture is described in clause 9.1.   7.4.1  Functional components   A  functional  component  is  a  functional  building  block  needed  to  engage  in  an  activity,  backed  by  an  implementation. Functional components are further described in clause 9.2.   7.4.2  Functional layers   A layer is a set of functional components that provide similar capabilities or serve a common purpose.   The functional architecture is partially layered (i.e., has layers and a set of multi-layer functions).   There are xxx layers defined in the BDRA:      [TBD]   NOTE   Not all layers or functional components are necessarily instantiated in a specific Big Data system.   7.4.3  Multi-layer functions   [Editors note: need to reconcile 20547-4 (Security & Privacy Fabric) v.s. multi-layers]   The multi-layer functions include functional components that provide capabilities that are used across multiple  functional layers.   Multi-layer functions are grouped into subsets.   The following subsets of multi-layer functions are defined:       [TBD]   Functional components of the multi-layer functions are described in clause 9.2.x.   7.5  Relationship between the user view and the functional view   Figure 5 illustrates how the user view provides the set of Big Data activities that are represented within the  functional view (and realized using the technologies of the implementation view).    ISO 2015  All rights reserved   9      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 5  From user view to functional view      7.6  Mapping Big Data RA Functional view to other System Integration RA     The user view is unique for Big data. The functional view may be applied on the target system or service. e.g.,  Cloud computing reference architecture (ISO/IEC 17789) defines its own Functional view for Cloud computing.  If Big Data solution is implemented on Cloud computing environment, the Big data Functional view shall be  mapped into Cloud computing Functional view.      10       Figure 6  Mapping Big Data RA Functional view onto Cloud Computing Reference Architecture          ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture      7.7  Relationship of the user view and functional view to cross-cutting aspects   [Editors note: need to flush out between cross-cutting, multi-layer, fabric]   Cross-cutting aspects, as their name implies, apply across both the user view and across the functional view  of Big Data.   Cross-cutting aspects apply to roles and sub-roles in the user view and they directly or indirectly affect the  activities which those roles perform.   Cross-cutting aspects also apply to the functional components within the functional view, which are used when  performing the activities described in the user view.   Cross-cutting aspects of Big Data described in clause 8.6 include:       Security and Privacy     Governance      [TBD]   8  Activities view     8.1   Introduction to roles, sub-roles and Big Data activities   [Editors note: contribution from JNB (N0119) provides additional roles and sub-roles and  activities  definition.  We  should  incorporate  this  contribution  with  the  rest  of  section  and  subsequence sections]   [Editors note: need contributions for all roles, sub-roles, and activities for entire Section 8]    ISO 2015  All rights reserved   11      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.1.1  Role: Big Data application provider (BDAP)   8.1.1.1   Sub-Role: Big Data Collection processor   8.1.1.2  Activity: receive data   8.1.1.3  Activity: store/buffer data   8.1.2  Sub-Role: Big Data Preparation processor   8.1.2.1  Activity: transform data   8.1.2.2  Activity: validate data     8.1.2.3  Activity: cleanse data   8.1.2.4  Activity: aggregate data   8.1.3  Sub-Role: Big Data Analytics processor   8.1.3.1  Activity: associate analytic logic   8.1.3.2  Activity: pass data   8.1.4  Sub-Role: Big Data Visualization processor   8.1.4.1  Activity: format data   8.1.4.2  Activity: present data   8.1.5  Sub-Role: Big Data Access processor   8.1.5.1  Activity: transfer data      NOTE:  To  realize  the  use  case  of  WG9N69,  "Collection",  "Preparation",  "Analytics",  "Visualization", and "Access" in Big Data Application Provider should be the sub-roles.      12      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.2  Role: Big Data Framework provider (BDFP)   8.2.1  Sub-Role: Big Data Processing provider   8.2.1.1  Activity: (no description in N0022)   8.2.2  Sub-Role: Big Data Platform provider   8.2.2.1  Activity: (no description in N0022)   8.2.3  Sub-Role: Big Data Infrastructure provider     8.2.3.1  Activity: (no description in N0022)        NOTE:  BDFP  may  be  functional  components.  For  example,  Functional  components  of  ISO/IEC  17789  (Cloud  Computing  Reference  Architecture)  are  used  for  the  Big  Data  system in the case of cloud environment.      8.3  Role: Big Data system partner (BDSP)   8.3.1  Sub-Role: Big Data System Developer   8.3.1.1  Activity: design application components   8.3.1.2  Activity: compose application   8.3.1.3  Activity: test application   8.3.2  Sub-Role: Big Data System Auditor   8.3.2.1  Activity: perform audit   8.3.2.2  Activity: report audit results   8.3.3  Sub-Role: Big Data System Orchestrator (from N0022)     8.3.3.1  Activity: define application requirements   8.3.3.2  Activity: define business process   8.3.3.3  Activity: define system architecture requirements   8.3.3.4  Activity: define Security requirements       ISO 2015  All rights reserved   13      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.4  Role: Data Provider (DP)   8.4.1  Activity: make data available   8.4.2  Activity: abstract data source types   8.5  Role: Data Consumer (DC)   8.5.1  Activity: receive data   Given that distributed services and their delivery are at the core of Big Data, all Big Data related activities can  be categorized into three main groups: activities that use Big Data, activities that provide Big Data analytics  services and activities that provide data.   This clause contains descriptions of some of the common roles and sub-roles associated with Big Data.   It is important to note that a party can play more than one role at any given point in time. When playing a role,  the party can restrict itself to playing one or more sub-roles. Sub-roles are a subset of the Big Data activities of  a given role.   As shown in Figure 8-1, the roles of Big Data are:     Big Data consumer (clause 8.2);     Data provider (clause 8.3);     Big Data application provider (clause 8.4);     Big Data framework provider (clause 8.5).      [Editors note: each box should support multiple instances]   Figure 7  Big Data roles      Figure 8-2 shows the roles of Big Data, with their associated sub-roles. Each of the sub-roles shown in the  figure is described in more detail in the following clauses.      [Editors note: each box (including sub-roles) should support multiple instances]      14      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 8  Roles and sub-roles [TBD]      [Editors  note:  the  below  text  and  diagram  are  from  N0120  which  show  a  good  relationship  between  RA  components. We need text to describe the diagrams more in details]   Figure X is a formalization of the Reference Architecture in terms of a UML class diagram. Note that class  BDAP  has  a  data  provision  link  looping  back,  to  account  for  the  possibility  that  a  BDAP  provides  data  to  another BDAP, making it possible for data provision to chain through many BDAPs.   Figure 9  UML class diagram of the Reference Architecture  Figure Y depicts a network of relationships among role instances based on the UML schema above. Note that  data provisions cascade through multiple BDAPs here.     ISO 2015  All rights reserved   15      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 10  Example network of relationships among Big Data role instances  Reference: WG9 N0069 JNB Contribution on N0022 Big Data Reference Architecture Editors Draft  replaces  N0064        8.6  Big Data consumer   8.6.1  Role   A  Big  Data  consumer  (BDC)  receives  the  value  output  of  the  Big  Data  system.  In  many  respects,  it  is  the  recipient of the same type of functional interfaces that the Data provider exposes to the Big Data application  provider.  After  the  system  adds  value  to  the  original  data  sources,  the  Big  Data  application  provider  then  exposes that same type of functional interfaces to the Big Data consumer.   A description of Big Data consumer's activities are included in clause 8.   8.6.1.1  BDC:sub-role#1 [TBD]   8.6.1.2  BDC:sub-role#2 [TBD]   8.6.2  Big Data activities   The Big Data activities which relate to the sub-roles of Big Data consumer are shown in Figure 8.   16      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 11  Big Data activities relating to Big Data consumer sub-roles [TBD]   8.6.2.1  Activity#1   8.6.2.2  Activity#2   8.6.2.3  Activity#..   8.7  Data Provider   8.7.1  Role   A Data provider (DP) makes data available to itself or to others. In fulfilling its role, the Data provider creates  an abstraction of various types of data sources (such as raw data or data previously transformed by another  system) and makes them available through different functional interfaces.     NOTE  up new possibilities for providing valuable data.   The concept of a Data Provider is not new, the greater data collection and analytics capabilities have opened   8.7.2  Big Data activities   The Big Data activities which relate to the sub-roles of Data provider are shown in Figure 9.    ISO 2015  All rights reserved   17      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   Figure 12  Big Data activities relating to Data provider sub-roles [TBD]   18      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.7.2.1  Role: Big Data application provider (BDAP)   8.7.2.1.1  Sub-Role: Big Data Collection processor   8.7.2.1.1.1   Activity: receive data   8.7.2.1.1.2   Activity: store/buffer data   8.7.2.1.2  Sub-Role: Big Data Preparation processor   8.7.2.1.2.1   Activity: transform data   8.7.2.1.2.2   Activity: validate data   8.7.2.1.2.3   Activity: cleanse data   8.7.2.1.2.4   Activity: aggregate data   8.7.2.1.3  Sub-Role: Big Data Analytics processor   8.7.2.1.3.1   Activity: associate analytic logic   8.7.2.1.3.2   Activity: pass data   8.7.2.1.4  Sub-Role: Big Data Visualization processor   8.7.2.1.4.1   Activity: format data   8.7.2.1.4.2   Activity: present data   8.7.2.1.5  Sub-Role: Big Data Access processor   8.7.2.1.5.1   Activity: transfer data   8.7.2.2  Role: Big Data Framework provider (BDFP)   8.7.2.2.1  Sub-Role: Big Data Processing provider   8.7.2.2.1.1   Activity: (no description in N0022)   8.7.2.2.2  Sub-Role: Big Data Platform provider   8.7.2.2.2.1   Activity: (no description in N0022)   8.7.2.2.3  Sub-Role: Big Data Infrastructure provider   8.7.2.3  Role: Big Data system partner (BDSP)   8.7.2.3.1  Sub-Role: Big Data System Developer   8.7.2.3.1.1   Activity: design application components   8.7.2.3.1.2   Activity: compose application    ISO 2015  All rights reserved   19      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.7.2.3.1.3   Activity: test application   8.7.2.3.2  Sub-Role: Big Data System Auditor   8.7.2.3.2.1   Activity: perform audit   8.7.2.3.2.2   Activity: report audit results   8.7.2.3.3  Sub-Role: Big Data System Orchestrator (from N0022)   8.7.2.3.3.1   Activity: define application requirements   8.7.2.3.3.2   Activity: define business process   8.7.2.3.3.3   Activity: define system architecture requirements   8.7.2.3.3.4   Activity: define Security requirements   8.7.2.4  Role: Data Provider (DP)   8.7.2.4.1.1   Activity: make data available   8.7.2.4.1.2   Activity: abstract data source types   8.7.2.5  Role: Data Consumer (DC)   8.7.2.5.1.1   Activity: receive data   8.7.2.6      8.8  Big Data application provider   8.8.1  Role   The Big Data application provider (BDAP) executes the manipulations of the data lifecycle. This is where the  general capabilities within the Big Data framework are combined to produce the specific data system.     NOTE  While the activities of an application provider are the same whether the solution being built concerns Big Data  or not, the methods and techniques have changed because the data and data processing is parallelized across resources.   The  Big  Data  application  provider  is  the  architecture  component  that  encapsulates  the  business  logic  and  functionality to be executed by the architecture.     NOTE  The  execution  of  these  activities  would  typically  be  specific  to  the  application  and,  therefore,  are  not  candidates for standardization. However, the metadata and the policies defined and exchanged between the applications  activities could be standardized when the application is specific to a vertical industry.   NOTE  While many of these activities exist in traditional data processing systems, the data volume, velocity, variety,  and variability present in Big Data systems radically change their implementation. Traditional algorithms and mechanisms  of  traditional  data  processing  implementations  need  to  be  adjusted  and  optimized  to  create  applications  that  are  responsive and can grow to handle ever growing data collections.   As data propagates through the ecosystem, it is being processed and transformed in different ways in order to  extract the value from the information. Each activity of the Big Data application provider can be implemented  by independent stakeholders and deployed as stand-alone services.     20      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   The  Big  Data  application  provider  can  be  a  single  instance  or  a  collection  of  more  granular  Big  Data  application providers, each implementing different steps in the data lifecycle. Each of the activities of the Big  Data application provider may be a general service invoked by the Data provider or Big Data consumer, such  as a Web server, a file server, a collection of one or more application programs, or a combination. There may  be multiple and differing instances of each activity or a single program may perform multiple activities. Each of  the  activities  is  able  to  interact  with  the  underlying  Big  Data  framework  providers  as  well  as  with  the  Data  providers and Big Data consumers. In addition, these activities may execute in parallel or in any number of  sequences and will frequently communicate with each other through the messaging/communications element  of the Big Data framework provider. Also, the functions of the Big Data application provider, specifically the  collection  and  access  activities,  will  to  perform  authentication/authorization and record/maintain data provenance.     the  Security  and  Privacy  Fabric   interact  with   Each of the functions can run on a separate Big Data framework provider or all can use a common Big Data  framework  provider.  The  considerations  behind  these  different  system  approaches  would  depend  on  potentially  different  technological  needs,  business  and/or  deployment  constraints  (including  privacy),  and  other  policy  considerations.  The  baseline  BDRA  does  not  show  the  underlying  technologies,  business  considerations,  and  topological  constraints,  thus  making  it  applicable  to  any  kind  of  system  approach  and  deployment.   NOTE  For example, the infrastructure of the Big Data application provider would be represented as one of the Big  Data framework providers. If the Big Data application provider uses external/outsourced infrastructures as well, it or they  will be represented as another or multiple Big Data framework providers in the BDRA.     8.8.2  Activities   The Big Data activities which relate to the role/sub-roles of Big Data application provider are shown in Figure  10.   Figure 13  Big Data activities relating to Big Data application provider role/sub-roles [TBD]      8.8.2.1  Collect data   The collect data activity handles the interface with the Data provider. This may be a general service, such as a  file server or web server to accept or perform specific collections of data, or it may be an application specific  service designed to pull data or receive pushes of data from the Data provider. Since this activity is receiving  data at a minimum, it must store/buffer the received data until it is persisted through the Big Data framework  provider. This persistence need not be to physical media but may simply be to an in-memory queue or other  service provided by the processing frameworks of the Big Data framework provider. The collection activity is  likely where the extraction portion of the Extract, Transform, Load/Extract, Load, Transform (ETL/ELT) cycle is  performed.     At the initial collection stage, sets of data (e.g., data records) of similar structure are collected (and combined),  resulting in uniform security, policy, and other considerations. Initial metadata is created (e.g., subjects with  keys are identified) to facilitate subsequent aggregation or lookup methods.    ISO 2015  All rights reserved   21      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.8.2.2   Prepare data   The  prepare  data  activity  is  where  the  transformation  portion  of  the  ETL/ELT  cycle  is  likely  performed,  although analytics activity will also likely perform advanced parts of the transformation. Tasks performed by  this activity could include data validation (e.g., checksums/hashes, format checks), cleansing (e.g., eliminating  bad records/fields), outlier removal, standardization, reformatting, or encapsulating. This activity is also where  source data will frequently be persisted to archive storage in the Big Data framework provider and provenance  data  will  be  verified  or  attached/associated.  Verification  or  attachment  may  include  optimization  of  data  through manipulations (e.g., deduplication) and indexing to optimize the analytics process. This activity may  also  aggregate  data  from  different  Data  providers,  leveraging  metadata  keys  to  create  an  expanded  and  enhanced data set.   8.8.2.3  Analyse data   The analyse data activity includes the encoding of the low-level business logic of the Big Data system. The  activity  implements  the  techniques  to  extract  knowledge  from  the  data  based  on  the  requirements  of  the  vertical  application.  The  requirements  specify  the  data  processing  algorithms  for  processing  the  data  to  produce  new  insights  that  will  address  the  technical  goal.  The  analyse  data  activity  will  leverage  the  processing  frameworks  to  implement  the  associated  logic.  This  typically  involves  the  activity  providing  software  that  implements  the  analytic  logic  to  the  batch  and/or  streaming  elements  of  the  processing  framework for execution.     The messaging/communication framework of the Big Data framework provider may be used to pass data or  control  functions  to  the  application  logic  running  in  the  processing  frameworks.  The  analytic  logic  may  be  broken up into multiple modules to be executed by the processing frameworks that communicate, through the  messaging/communication  framework,  with  each  other  and  other  functions  instantiated  by  the  Big  Data  application provider.   8.8.2.4   Visualize data   The visualize data activity prepares elements of the processed data and the output of the analyse data activity  for presentation to the Big Data consumer. The objective of this activity is to format and present data in such a  way  as  to  optimally  communicate  meaning  and  knowledge.  The  visualization  preparation  may  involve  producing a text-based report or rendering the analytic results as some form of graphic. The resulting output  may  be  a  static  visualization  and  may  simply  be  stored  through  the  Big  Data  framework  provider  for  later  access. However, the visualize data activity frequently interacts with the access data activity, the analyse data  activity, and the Big Data framework provider (processing and platform) to provide interactive visualization of  the  data  to  the  Big  Data  consumer  based  on  parameters  provided  to  the  access  activity  by  the  Big  Data  consumer.  The  visualization  activity  may  be  completely  application  implemented,  leverage  one  or  more  application  libraries,  or  may  use  specialized  visualization  processing  frameworks  within  the  Big  Data  framework provider.   8.8.2.5  Access data   The access data activity is focused on the communication/interaction with the Big Data consumer. Similar to  the collect data activity, the access data activity may be a generic service such as a web server or application  server to handle specific requests from the Big Data consumer. This activity would interface with the visualize  data and analyse data activities to respond to requests from the Big Data consumer (who may be a person)  and uses the processing and platform frameworks to retrieve data to respond to Big Data consumer requests.  In addition, the access activity confirms that descriptive and administrative metadata and metadata schemes  are captured and maintained for access by the Big Data consumer and as data is transferred to the Big Data  consumer. The interface with the Big Data consumer may be synchronous or asynchronous in nature and may  use a pull or push paradigm for data transfer.   22      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   8.9  Big Data framework provider   8.9.1  Role   The Big Data framework provider (BDFP) typically consists of one or more hierarchically organized instances  of the components. There is no requirement that all instances at a given level in the hierarchy be of the same  technology.     NOTE  provide flexibility or meet the complete range of requirements, which are driven from the Big Data application provider.     In fact, most Big Data implementations are hybrids that combine multiple technology approaches in order to   NOTE  Many of the recent advances related to Big Data have been in the area of frameworks designed to scale to Big  Data needs (e.g., addressing volume, variety, velocity, and variability) while maintaining linear or near linear performance.  These advances have generated much of the technology excitement in the Big Data space. Accordingly, there is a great  deal  more  information  available  in  the  frameworks  area  compared  to  the  other  components  and  the  additional  detail  provided for the Big Data Framework Provider in this document reflects this imbalance.     The Big Data Framework Provider is comprised of the following three sub-roles:        Infrastructure Frameworks     Data Platform Frameworks     Processing Frameworks   8.9.1.1  BDFP:Infrastructures [TBD]   This Big Data framework provider element provides all of the resources necessary to host/run the activities of  the  other  components  of  the  Big  Data  system.  Typically,  these  resources  consist  of  some  combination  of  physical resources, which may host/support similar virtual resources. These resources are generally classified  as follows:     Networking: These are the resources that transfer data from one infrastructure framework component to   another     Computing:  These  are  the  physical  processors  and  memory  that execute  and hold  the software  of the   other Big Data system components     Storage: These are resources which provide persistence of the data in a Big Data system     Environmental: These are the physical plant resources (power, cooling) that must be accounted for when   establishing an instance of a Big Data system     While  the  Big  Data  framework  provider  component  may  be  deployed  directly  on  physical  resources  or  on  virtual  resources,  at  some  level  all  resources  have  a  physical  representation.  Physical  resources  are  frequently used to deploy multiple components that will be duplicated across a large number of physical nodes  to  provide  what  is known  as horizontal scalability. Virtualization  is  frequently used  to  achieve  elasticity  and  flexibility in the allocation of physical resources and is often referred to as Infrastructure as a Service (IaaS)  within the cloud computing community. Virtualization is typically found in one of three basic forms within a Big  Data Architecture.     Native: In this form, a hypervisor runs natively on the bare metal and manages multiple virtual machines   consisting of Operating Systems (OS) and applications.     Hosted: In this form, an OS runs natively on the bare metal and a hypervisor runs on top of that to host a  client OS and applications. This model is not often seen in Big Data architectures due to the increased  overhead of the extra OS layer.     Containerized:  In  this  form,  hypervisor  functions  are  embedded  in  the  OS,  which  runs  on  bare  metal.  Applications  are  run  inside  containers,  which  control  or  limit  access  to  the  OS  and  physical  machine    ISO 2015  All rights reserved   23      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   resources.  This  approach  has  gained  popularity  for  Big  Data  architectures  because  it  further  reduces  overhead since most OS functions are a single shared resource. It may not be considered as secure or  stable  since  in  the  event  that  the  container  controls/limits  fail,  one  application  may  take  down  every  application sharing those physical resources.   8.9.1.2  BDFP:Data Platforms [TBD]   Data  Platform  Frameworks  provide  for  the  logical  data  organization  and  distribution  combined  with  the  associated access application programming interfaces (APIs) or methods. The frameworks may also include  data  registry  and  metadata  services  along  with  semantic  data  descriptions  such  as  formal  ontologies  or  taxonomies.  The  logical  data  organization  may  range  from  simple  delimited  flat  files  to  fully  distributed  relational  or  columnar  data  stores.  The  storage  mediums  range  from  high  latency  robotic  tape  drives,  to  spinning  magnetic  media,  to  flash/solid  state  disks,  or  to  random  access  memory.  Accordingly,  the  access  methods  may  range  from  file  access  APIs  to  query  languages  such  as  SQL.  Typical  Big  Data  framework  implementations would support either basic file system style storage or in-memory storage and one or more  indexed storage approaches. Based on the specific Big Data system considerations, this logical organization  may or may not be distributed across a cluster of computing resources.     8.9.1.3  BDFP:Processing     8.9.2  Big Data activities   The Big Data activities which relate to the role/sub-roles of Big Data framework provider are shown in Figure  11.   Figure 14  Big Data activities relating to Big Data application provider role/sub-roles Cross-cutting   aspects      8.9.2.1  Activity#1   8.9.2.2  Activity#2   8.9.2.3  Activity#..   8.9.3  Cross-cutting or Fabric Roles   Cross-cutting aspects include both architectural and operational considerations. Cross-cutting aspects apply  to multiple elements within the description of the BDRA or in connection with its operation as an instantiated  system. These cross-cutting aspects are shared issues across the roles, activities and functional components.     NOTE  For  example,  security  is  a  cross-cutting  aspect  because  it  applies  to  infrastructure,  services,  Big  Data  application providers, Big Data framework providers and Big Data consumers. All of these need to be secured, but how   24      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   they are secured is different based on what is being secured. So, securing infrastructure and infrastructure services is very  different from securing software services.     Some  cross-cutting  aspects  can  apply  to  other  cross-cutting  aspects,  for  example,  governance  applies  to  functional elements as well as to the cross-cutting aspects of performance and security.   Cross-cutting aspects often affect the Big Data activities performed by roles. Roles can coordinate supporting  a cross-cutting aspect amongst themselves and their Big Data activities. Supporting cross-cutting aspects also  needs  functional  components  to  provide  support  for  Big  Data  activities,  technical  capabilities  and  implementations.   For each cross-cutting aspect, a set of Big Data activities and functional components are defined to support  them. Different roles and solutions can use different subsets of these.   Cross-cutting aspects include:       Security and Privacy     Governance      [TBD]   8.9.4  Security and privacy   Security  and  privacy  issues  affect  all  other  components  of  the  BDRA,  as  depicted  by  the  encompassing  Security  and  Privacy  box  in  Figure  7.4.  A  Security  and  Privacy  Fabric  could  interact  with  the  System  Orchestrator for policy, requirements, and auditing and also with both the Big Data Application Provider and  the Big Data Framework Provider for development, deployment, and operation. Figure 9 lists representative  actors and activities associated with the Security and Privacy Fabric of the BDRA.   8.9.5  Governance   9  Functional view     [Editors note: need much contributions, clarification and discussion how this section fits with the rest of the  concept]   9.1  Functional architecture   The  functional  architecture  for  Big  Data  describes  Big  Data  in  terms  of  a  high  level  set  of  functional  components. The functional components represent sets of functions that are required to perform the Big Data  activities described in clause 8 for the various roles and sub-roles involved in Big Data.   The functional architecture describes functional components in terms of a layering framework where specific  types  of  functions  are  grouped  into  each  layer  and  where  there  are  interfaces  between  the  functional  components in successive layers.   9.1.1  Layering framework   The  layering  framework used  in  the  BDRA  has  four layers,  plus a  set  of  functions  which spans  across the  layers. The four layers are:     user layer;     access layer;     service layer;    ISO 2015  All rights reserved   25      ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture     resource layer.   The functions which span the layers are called the multi-layer functions.   The layering framework is shown diagrammatically in Figure 12.   Each of the layers in the framework is described in the following sub-clauses.   Figure 15  Big Data layering framework   9.1.1.1  User layer        The user layer is the user interface through which a Big Data consumer interacts with Big Data application  provider  and  with  Big  Data  services,  performs  consumer  related  administrative  activities,  and  monitors  Big  Data services. It can also offer the output of Big Data services to another resource layer instance.   9.1.1.2  Access layer     The  access  layer  provides  a  common  interface  for  both  manual  and  automated  access  to  the  capabilities  available  in  the  services  layer.  These  capabilities  include  both  the  capabilities of the services  and  also  the  administration and business capabilities.     The  access  layer  is  responsible  for  presenting  Big  Data  service  capabilities  over  one  or  more  access  mechanisms  for example, as a set of web pages accessed via a browser, or as a set of web services which  can be accessed programmatically, on secure communication. Another responsibility of the access layer is to  apply appropriate security functionality to the access to Big Data capabilities. The access layer is responsible  for authenticating the request through the use of user credentials and for validating the authorization of the  user to use particular capabilities. The access layer is also responsible for handling encryption and checking  for request integrity, where required.   The access layer can also be responsible for enforcing QoS policies on the traffic coming from the user layer  (e.g., service requests to the Big Data application provider) and the traffic towards the user layer (e.g., output  of Big Data services).   The  access  layer  passes  on  validated  requests  to  the  components  in  the  services  layer.  The  access  layer  accepts  Big  Data  consumer  or  Big  Data  application  provider's  Big  Data  service  consumption  requests  to  access BDAPs' services and resources.   9.1.1.3   Service layer     The service layer contains the implementation of the services provided by a Big Data application provider. The  service  layer  contains  and  controls  the  software  components  that  implement  the  services  (but  not  the  underlying  hypervisors,  host  operating  systems,  device  drivers  etc.),  and  arranges  to  offer  the  Big  Data  services to users via the access layer.   26      ISO 2015  All rights reserved   ISO 20547-3:Big Data Reference Architecture  Part 3: Reference Architecture   The service implementation software in the service layer in turn relies upon the capabilities available in the  resource layer to provide the services that are offered and to ensure that the requirements.   9.1.1.4  Resource layer     The  resource  layer  is  where  the  resources  reside.  This  includes  equipment  typically  used  in  a  data  centre  such as servers, networking switches and routers, storage devices, and also the corresponding non-Big Data- specific software that runs on the servers and other equipment such as host operating systems, hypervisors,  device drivers and generic systems management software.   The resource layer also represents and houses the Big Data transport network functionality which is required  to provide underlying network connectivity between the Big Data application provider and the users, as well as  within the Big Data application provider and between peer Big Data application providers.   9.1.1.5  Multi-layer functions     The multi-layer functions include a series of functional components that interact with functional components of  the above four other layers to provide supporting capabilities including and not limited to:     operational  support  systems  capabilities   maintenance);   (runtime  administration,  monitoring,  provisioning  and     business support systems capabilities (product catalogue, billing and financial management);     security systems capabilities (authentication, authorization, auditing, validation, encryption);      integration capabilities (linkage of different components to achieve the required functionality);     development support capabilities (involving the creation, testing and life-cycle management of services   and service components).   10      ISO 2015  All rights reserved   27      